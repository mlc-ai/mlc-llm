plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

task generateJniHeaders(type: Exec, description: 'Generate JNI Headers') {
    def headerPath = "${project.projectDir}/src/main/jni"
    def classPath = "${project.projectDir}/../../build/tvm_home/jvm/core/target/*"
    def filePath = "${project.projectDir}/../../build/tvm_home/jvm/core/src/main/java/org/apache/tvm/LibInfo.java"
    commandLine "javac", "-h", headerPath, "-classpath", classPath, filePath
    doLast {
        file("${headerPath}/org_apache_tvm_LibInfo.h").renameTo(file("${headerPath}/org_apache_tvm_native_c_api.h"))
    }
}

task copyFiles(type: Copy, description: 'Copy Sources for ndk-build') {
    dependsOn "generateJniHeaders"
    def ndkFilesPath = "${project.projectDir}/../../build/tvm_home/jvm/native/src/main/native"
    def srcPath = "${project.projectDir}/src/main/jni/"

    from "${ndkFilesPath}/org_apache_tvm_native_c_api.cc", "${ndkFilesPath}/jni_helper_func.h"
    into srcPath
}

task deleteLibs(type: Delete, description: "Delete Compiled Libraries") {
    dependsOn "copyFiles"
    def libsPath = "${project.projectDir}/src/main/libs"
    delete libsPath
}

task buildJni(type: Exec, description: 'Build JNI libs') {
    dependsOn "deleteLibs"
    def buildPath = "${project.projectDir}/src/main/jni"
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    commandLine "ndk-build", "--directory", buildPath
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn buildJni
}

android {
    namespace 'ai.mlc.mlcchat'
    compileSdk 33

    defaultConfig {
        applicationId "ai.mlc.mlcchat"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jni.srcDirs = []
            jniLibs.srcDirs = ['src/main/libs']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.3'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.1'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3:1.1.0'
    implementation 'androidx.compose.material:material-icons-extended'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.navigation:navigation-compose:2.5.3'
    implementation 'com.google.code.gson:gson:2.10.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    implementation files("${project.projectDir}/../../build/tvm_home/jvm/core/target/tvm4j-core-0.0.1-SNAPSHOT.jar")
}