// .devcontainer/devcontainer.json - VS Code development container
{
  "name": "MLC-LLM Development",
  "dockerComposeFile": "../docker-compose.yml",
  "service": "mlc-dev",
  "workspaceFolder": "/workspace",
  "shutdownAction": "stopCompose",

  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.black-formatter",
        "ms-python.isort",
        "ms-python.pylint",
        "ms-python.mypy-type-checker",
        "ms-toolsai.jupyter",
        "ms-vscode.cmake-tools",
        "ms-vscode.cpptools",
        "rust-lang.rust-analyzer",
        "GitHub.copilot",
        "ms-vscode.vscode-json",
        "redhat.vscode-yaml",
        "ms-azuretools.vscode-docker",
        "eamodio.gitlens"
      ],
      "settings": {
        "python.defaultInterpreterPath": "/opt/conda/envs/mlc-llm/bin/python",
        "python.terminal.activateEnvironment": true,
        "python.formatting.provider": "black",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.linting.mypyEnabled": true,
        "python.testing.pytestEnabled": true,
        "python.testing.pytestPath": "/opt/conda/envs/mlc-llm/bin/pytest",
        "python.testing.unittestEnabled": false,
        "python.testing.nosetestsEnabled": false,
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": true
        },
        "files.exclude": {
          "**/__pycache__": true,
          "**/.pytest_cache": true,
          "**/build": true,
          "**/*.egg-info": true
        }
      }
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [8888, 6006, 8000, 3000],
  "portsAttributes": {
    "8888": {
      "label": "Jupyter Lab",
      "onAutoForward": "openPreview"
    },
    "6006": {
      "label": "TensorBoard",
      "onAutoForward": "openPreview"
    },
    "8000": {
      "label": "FastAPI Server",
      "onAutoForward": "openPreview"
    }
  },

  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root
  "remoteUser": "mlcuser",

  // Lifecycle scripts
  "postCreateCommand": "git config --global --add safe.directory /workspace && pre-commit install",
  "postStartCommand": "conda activate mlc-llm",

  // Features to add to the dev container. More info: https://containers.dev/features
  "features": {
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/git-lfs:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {}
  },

  // Environment variables
  "containerEnv": {
    "MLC_LLM_SOURCE_DIR": "/workspace",
    "PYTHONPATH": "/workspace/python:${PYTHONPATH}"
  },

  // Mounts for persistent data
  "mounts": [
    "source=vscode-extensions,target=/home/mlcuser/.vscode-server/extensions,type=volume",
    "source=${localWorkspaceFolder}/.devcontainer/bashrc,target=/home/mlcuser/.bashrc,type=bind,consistency=cached"
  ]
}